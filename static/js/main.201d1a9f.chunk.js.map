{"version":3,"sources":["game.jsx","index.js"],"names":["Square","props","type","className","onClick","click","value","calculateWinner","squares","lines","a9","Array","i","length","a","b","c","Board","useState","A","setA","B","setB","renderSquare","ts","AA","slice","Click","ReactDOM","render","document","getElementById"],"mappings":"kIAIMA,EAAS,SAACC,GACZ,OACI,yBAAQC,KAAK,SAASC,UAAU,yBAAyBC,QAASH,EAAMI,MAAxE,cAAiFJ,EAAMK,MAAvF,QAKFC,EAAkB,SAACC,GAYrB,IAXA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAELC,EAAK,IAAIC,MAAM,GACZC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACnC,kBAAkBH,EAAMG,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIR,EAAQM,IAAMN,EAAQM,KAAON,EAAQO,IAAMP,EAAQM,KAAON,EAAQQ,GAClE,OAAOR,EAAQM,GAEnB,GAAIN,EAAQM,KAAOJ,EACf,MAAO,SAONO,EAAQ,WACjB,MAAkBC,mBAAS,IAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAkBF,oBAAS,GAA3B,mBAAOG,EAAP,KAAUC,EAAV,KAaMC,EAAe,SAACC,GAClB,OACI,cAAC,EAAD,CAAQlB,MAAOa,EAAEK,GAAKnB,MAAO,kBAbvB,SAACmB,GACX,IAAMC,EAAKN,EAAEO,QACTnB,EAAgBkB,IAAOA,EAAGD,KAG9BC,EAAGD,GAAMH,EAAI,IAAM,IACnBD,EAAKK,GACLH,GAAMD,IAMiCM,CAAMH,OAIjD,OACI,qCACI,qBAAIrB,UAAU,KAAd,yBAAgCkB,EAAI,8BAAiB,iCACrD,sBAAKlB,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACKoB,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKpB,UAAU,WAAf,UACKoB,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKpB,UAAU,WAAf,UACKoB,EAAa,GACbA,EAAa,GACbA,EAAa,SAItB,qBAAIpB,UAAU,KAAd,0CAAkCI,EAAgBY,U,4BCtE9DS,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,U","file":"static/js/main.201d1a9f.chunk.js","sourcesContent":["import React, {useState } from 'react';\r\nimport \"./game.css\"\r\n\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={props.click}> {props.value} </button>\r\n    )\r\n}\r\n\r\n\r\nconst calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    const a9 = new Array(9)\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n        if (squares[a] === a9) {\r\n            return \"draw\"\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const Board = () => {\r\n    const [A, setA] = useState([])\r\n    const [B, setB] = useState(true)\r\n\r\n    const Click = (ts) => {\r\n        const AA = A.slice();\r\n        if (calculateWinner(AA) || AA[ts]) {\r\n            return;\r\n        }\r\n        AA[ts] = B ? \"O\" : \"X\"\r\n        setA(AA)\r\n        setB(!B)\r\n    }\r\n\r\n\r\n    const renderSquare = (ts) => {\r\n        return (\r\n            <Square value={A[ts]} click={() => Click(ts)} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className='h1'> Caro Game: {B ? \"người chơi 1\" : \"người chơi 2\"}</h1>\r\n            <div className=\"bigbox\">\r\n                <div className=\"smallbox\">\r\n                    {renderSquare(0)}\r\n                    {renderSquare(1)}\r\n                    {renderSquare(2)}\r\n                </div>\r\n                <div className=\"smallbox\">\r\n                    {renderSquare(3)}\r\n                    {renderSquare(4)}\r\n                    {renderSquare(5)}\r\n                </div>\r\n                <div className=\"smallbox\">\r\n                    {renderSquare(6)}\r\n                    {renderSquare(7)}\r\n                    {renderSquare(8)}\r\n                </div>\r\n            </div>\r\n\r\n            <h1 className='h1'> người thắng: {calculateWinner(A)}</h1>\r\n            {/* <h1 className='watch'>{componentDidMount()}</h1> */}\r\n        </>\r\n    )\r\n}\r\n\r\n","\nimport {Board} from \"./game\"\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"animate.css/animate.min.css\"\n\n\n\nReactDOM.render(<Board />, document.getElementById('root'));\n"],"sourceRoot":""}